{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../src/opus/loader.ts"],"names":[],"mappings":";;;AAEA,gEAAkE;AAClE,sDAA0D;AAE1D,MAAM,OAAO,GAA6D;IACzE,CAAC,iBAAiB,EAAE,CAAC,OAA2B,EAAE,EAAE,CAAC,IAAI,sCAAoB,CAAC,OAAO,CAAC,CAAC;IACvF,CAAC,YAAY,EAAE,CAAC,OAA2B,EAAE,EAAE,CAAC,IAAI,8BAAiB,CAAC,OAAO,CAAC,CAAC;CAC/E,CAAC;AAEF,IAAI,MAAkE,CAAC;AAEvE,SAAgB,eAAe,CAC9B,eAA+B,EAAE,EACjC,YAAY,GAAG,KAAK;;IAEpB,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;QAC5B,OAAO,MAAM,CAAC;KACd;IAED,MAAM,QAAQ,GAAa,EAAE,CAAC;IAE9B,KAAK,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;QACzD,IAAI;YACH,OAAO,CAAC,OAAO,CAAC,CAAC;YACjB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;SACrB;QAAC,OAAO,KAAc,EAAE;YACxB,QAAQ,CAAC,IAAI,CAAC,kBAAkB,OAAO,QAAQ,MAAC,MAAC,KAAa,0CAAE,OAA8B,mCAAI,SAAS,EAAE,CAAC,CAAC;SAC/G;KACD;IAED,MAAM,IAAI,KAAK,CAAC,mCAAmC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3E,CAAC;AApBD,0CAoBC;AAED,SAAgB,iBAAiB,CAChC,OAA2B,EAC3B,YAA6B,EAC7B,YAAsB;IAEtB,OAAO,eAAe,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC;AAC7D,CAAC;AAND,8CAMC","sourcesContent":["/* eslint-disable @typescript-eslint/no-require-imports */\nimport { OpusEncoder, OpusEncoderOptions } from './adapters/OpusEncoder';\nimport { DiscordJSOpusEncoder } from './adapters/@discordjs-opus';\nimport { OpusScriptEncoder } from './adapters/opusscript';\n\nconst LOADERS: [string, (options: OpusEncoderOptions) => OpusEncoder][] = [\n\t['@discordjs/opus', (options: OpusEncoderOptions) => new DiscordJSOpusEncoder(options)],\n\t['opusscript', (options: OpusEncoderOptions) => new OpusScriptEncoder(options)],\n];\n\nlet cached: ((options: OpusEncoderOptions) => OpusEncoder) | undefined;\n\nexport function loadOpusLibrary(\n\textraLoaders: typeof LOADERS = [],\n\tforceRefresh = false,\n): (options: OpusEncoderOptions) => OpusEncoder {\n\tif (!forceRefresh && cached) {\n\t\treturn cached;\n\t}\n\n\tconst errorLog: string[] = [];\n\n\tfor (const [modName, fn] of extraLoaders.concat(LOADERS)) {\n\t\ttry {\n\t\t\trequire(modName);\n\t\t\treturn (cached = fn);\n\t\t} catch (error: unknown) {\n\t\t\terrorLog.push(`- Load failure ${modName}:\\n  ${((error as any)?.message as string | undefined) ?? 'unknown'}`);\n\t\t}\n\t}\n\n\tthrow new Error(`Could not find an Opus engine:\\n${errorLog.join('\\n')}`);\n}\n\nexport function createOpusEncoder(\n\toptions: OpusEncoderOptions,\n\textraLoaders?: typeof LOADERS,\n\tforceRefresh?: boolean,\n): OpusEncoder {\n\treturn loadOpusLibrary(extraLoaders, forceRefresh)(options);\n}\n"]}