{"version":3,"file":"@discordjs-opus.js","sourceRoot":"","sources":["../../../src/opus/adapters/@discordjs-opus.ts"],"names":[],"mappings":";;;AAAA,uDAAuD;AACvD,0DAA0D;AAC1D,+CAAuF;AAEvF,MAAa,oBAAqB,SAAQ,yBAAmB;IAG5D,YAAmB,OAA2B;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC;IAEM,MAAM,CAAC,MAAc;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,MAAc;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,eAAe,CAAC,GAAW,EAAE,KAAa;QAChD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAEM,eAAe,CAAC,GAAW,EAAE,KAAa;QAChD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,gEAAgE;IACzD,MAAM,KAAU,CAAC;CACxB;AA3BD,oDA2BC","sourcesContent":["/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable @typescript-eslint/no-require-imports */\nimport { OpusEncoder as AbstractOpusEncoder, OpusEncoderOptions } from './OpusEncoder';\n\nexport class DiscordJSOpusEncoder extends AbstractOpusEncoder {\n\tprivate readonly encoder: any;\n\n\tpublic constructor(options: OpusEncoderOptions) {\n\t\tsuper(options);\n\t\tconst { OpusEncoder } = require('@discordjs/opus');\n\t\tthis.encoder = new OpusEncoder(options.rate, options.channels);\n\t}\n\n\tpublic encode(buffer: Buffer): Buffer {\n\t\treturn this.encoder.encode(buffer);\n\t}\n\n\tpublic decode(buffer: Buffer): Buffer {\n\t\treturn this.encoder.decode(buffer);\n\t}\n\n\tpublic applyEncoderCTL(ctl: number, value: number): void {\n\t\tthis.encoder.applyEncoderCTL(ctl, value);\n\t}\n\n\tpublic applyDecoderCTL(ctl: number, value: number): void {\n\t\tthis.encoder.applyDecoderCTL(ctl, value);\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tpublic delete(): void {}\n}\n"]}