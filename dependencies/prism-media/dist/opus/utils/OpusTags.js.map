{"version":3,"file":"OpusTags.js","sourceRoot":"","sources":["../../../src/opus/utils/OpusTags.ts"],"names":[],"mappings":"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","sourcesContent":["export interface OpusTagsData {\n\tvendor: string;\n\ttags: Record<string, string>;\n}\n\nexport type PartialOpusTagsData = Partial<OpusTagsData>;\n\nconst OPUSTAGS = Buffer.from('OpusTags');\n\nexport class OpusTags implements Required<OpusTagsData> {\n\tpublic readonly vendor: string;\n\tpublic readonly tags: Record<string, string>;\n\n\tpublic constructor(data: PartialOpusTagsData = {}) {\n\t\tthis.vendor = data.vendor ?? 'prism-media';\n\t\tthis.tags = data.tags ?? {};\n\t}\n\n\tpublic toBuffer(): Buffer {\n\t\tconst head = Buffer.alloc(8 + (4 + this.vendor.length) + 4); // magic signature, vendor, string count\n\t\tOPUSTAGS.copy(head, 0, 0);\n\t\thead.writeUInt32LE(this.vendor.length, 8);\n\t\tBuffer.from(this.vendor).copy(head, 12);\n\t\thead.writeUInt32LE(Object.keys(this.tags).length, 12 + this.vendor.length);\n\t\treturn Buffer.concat([\n\t\t\thead,\n\t\t\t...Object.entries(this.tags).flatMap(([key, value]) => {\n\t\t\t\tconst size = Buffer.allocUnsafe(4);\n\t\t\t\tsize.writeUInt32LE(key.length + value.length + 1, 0);\n\t\t\t\treturn [size, Buffer.from(`${key}=${value}`)];\n\t\t\t}),\n\t\t]);\n\t}\n\n\tpublic static from(buffer: Buffer): OpusTags {\n\t\tif (!buffer.slice(0, 8).equals(OPUSTAGS)) throw new Error('not opus tags');\n\t\tconst vendorSize = buffer.readUInt32LE(8);\n\t\tconst vendor = buffer.slice(12, 12 + vendorSize).toString('utf-8');\n\t\tlet tagsRemaining = buffer.readUInt32LE(12 + vendorSize);\n\t\tlet i = 12 + vendorSize + 4;\n\t\tconst tags: Record<string, string> = {};\n\t\twhile (tagsRemaining--) {\n\t\t\tconst tagSize = buffer.readUInt32LE(i);\n\t\t\ti += 4;\n\t\t\tconst tag = buffer.slice(i, i + tagSize).toString('utf-8');\n\t\t\ti += tag.length;\n\t\t\tconst [key, value] = tag.split('=');\n\t\t\ttags[key] = value;\n\t\t}\n\t\treturn new OpusTags({ vendor, tags });\n\t}\n}\n"]}