{"version":3,"file":"WebmBaseDemuxer.js","sourceRoot":"","sources":["../../src/webm/WebmBaseDemuxer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Transform, TransformCallback, TransformOptions } from 'stream';\n\ninterface Track {\n\ttype: number;\n\tnumber: number;\n}\n\nexport type ParseResult =\n\t| typeof TOO_SHORT\n\t| [\n\t\t\tundefined,\n\t\t\t{\n\t\t\t\toffset: number;\n\t\t\t\t_skipUntil?: number;\n\t\t\t},\n\t  ]\n\t| [Error];\n\nexport abstract class WebmBaseDemuxer extends Transform {\n\tprivate _remainder?: Buffer;\n\tprivate _length = 0;\n\tprivate _count = 0;\n\tprivate _ebmlFound = false;\n\tprivate _skipUntil?: number;\n\tprivate _incompleteTrack: Partial<Track>;\n\tprivate _track?: Track;\n\n\tpublic constructor(options?: TransformOptions) {\n\t\tsuper(Object.assign({ readableObjectMode: true }, options));\n\t\tthis._incompleteTrack = {};\n\t}\n\n\tpublic _transform(chunk: Buffer, encoding: BufferEncoding, done: TransformCallback) {\n\t\tthis._length += chunk.length;\n\t\tif (this._remainder) {\n\t\t\tchunk = Buffer.concat([this._remainder, chunk]);\n\t\t\tthis._remainder = undefined;\n\t\t}\n\t\tlet offset = 0;\n\t\tif (this._skipUntil && this._length > this._skipUntil) {\n\t\t\toffset = this._skipUntil - this._count;\n\t\t\tthis._skipUntil = undefined;\n\t\t} else if (this._skipUntil) {\n\t\t\tthis._count += chunk.length;\n\t\t\treturn done();\n\t\t}\n\t\tlet result;\n\t\twhile (typeof result !== 'symbol') {\n\t\t\tresult = this._readTag(chunk, offset);\n\t\t\tif (typeof result === 'symbol') break;\n\t\t\tconst [error, info] = result;\n\t\t\tif (error) return done(error);\n\t\t\tconst { offset: newOffset, _skipUntil: skipUntil } = info!;\n\t\t\tif (skipUntil) {\n\t\t\t\tthis._skipUntil = skipUntil;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (newOffset) offset = newOffset;\n\t\t\telse break;\n\t\t}\n\t\tthis._count += offset;\n\t\tthis._remainder = chunk.slice(offset);\n\t\treturn done();\n\t}\n\n\tprivate _readEBMLId(chunk: Buffer, offset: number) {\n\t\tconst idLength = vintLength(chunk, offset);\n\t\tif (typeof idLength === 'symbol') return TOO_SHORT;\n\t\treturn {\n\t\t\tid: chunk.slice(offset, offset + idLength),\n\t\t\toffset: offset + idLength,\n\t\t};\n\t}\n\n\tprivate _readTagDataSize(chunk: Buffer, offset: number) {\n\t\tconst sizeLength = vintLength(chunk, offset);\n\t\tif (typeof sizeLength === 'symbol') return TOO_SHORT;\n\t\tconst dataLength = expandVint(chunk, offset, offset + sizeLength);\n\t\treturn { offset: offset + sizeLength, dataLength, sizeLength };\n\t}\n\n\tprivate _readTag(chunk: Buffer, offset: number): ParseResult {\n\t\tconst idData = this._readEBMLId(chunk, offset);\n\t\tif (typeof idData === 'symbol') return TOO_SHORT;\n\t\tconst ebmlID = idData.id.toString('hex');\n\t\tif (!this._ebmlFound) {\n\t\t\tif (ebmlID === '1a45dfa3') this._ebmlFound = true;\n\t\t\telse return [new Error('Did not find the EBML tag at the start of the stream')];\n\t\t}\n\t\toffset = idData.offset;\n\t\tconst sizeData = this._readTagDataSize(chunk, offset);\n\t\tif (typeof sizeData === 'symbol') return TOO_SHORT;\n\t\tconst { dataLength } = sizeData;\n\t\tif (typeof dataLength === 'symbol') return TOO_SHORT;\n\t\toffset = sizeData.offset;\n\t\t// If this tag isn't useful, tell the stream to stop processing data until the tag ends\n\t\tif (!TAGS.hasOwnProperty(ebmlID)) {\n\t\t\tif (chunk.length > offset + dataLength) {\n\t\t\t\treturn [undefined, { offset: offset + dataLength }];\n\t\t\t}\n\t\t\treturn [undefined, { offset, _skipUntil: this._count + offset + dataLength }];\n\t\t}\n\n\t\tconst tagHasChildren = (TAGS as any)[ebmlID] as boolean;\n\t\tif (tagHasChildren) {\n\t\t\treturn [undefined, { offset }];\n\t\t}\n\n\t\tif (offset + dataLength > chunk.length) return TOO_SHORT;\n\t\tconst data = chunk.slice(offset, offset + dataLength);\n\t\tif (!this._track) {\n\t\t\tif (ebmlID === 'ae') this._incompleteTrack = {};\n\t\t\tif (ebmlID === 'd7') this._incompleteTrack.number = data[0];\n\t\t\tif (ebmlID === '83') this._incompleteTrack.type = data[0];\n\t\t\tif (this._incompleteTrack.type === 2 && typeof this._incompleteTrack.number !== 'undefined') {\n\t\t\t\tthis._track = this._incompleteTrack as any;\n\t\t\t}\n\t\t}\n\t\tif (ebmlID === '63a2') {\n\t\t\tconst error = this._checkHead(data);\n\t\t\tif (error) return [error];\n\t\t\tthis.emit('head', data);\n\t\t} else if (ebmlID === 'a3') {\n\t\t\tif (!this._track) return [new Error('No audio track in this webm!')];\n\t\t\tif ((data[0] & 0xf) === this._track.number) {\n\t\t\t\tthis.push(data.slice(4));\n\t\t\t}\n\t\t}\n\t\treturn [undefined, { offset: offset + dataLength }];\n\t}\n\n\tpublic _destroy(err: Error | null, cb: (error: Error | null) => void): void {\n\t\tthis._cleanup();\n\t\tcb(err);\n\t}\n\n\tpublic _final(cb: (error?: Error) => void) {\n\t\tthis._cleanup();\n\t\tcb();\n\t}\n\n\t/**\n\t * Cleans up the demuxer when it is no longer required.\n\t * @private\n\t */\n\tpublic _cleanup() {\n\t\tthis._remainder = undefined;\n\t\tthis._incompleteTrack = {};\n\t\tthis._track = undefined;\n\t}\n\n\tprotected abstract _checkHead(buffer: Buffer): Error | undefined;\n}\n\nconst TOO_SHORT = Symbol('TOO_SHORT');\n\nconst TAGS = {\n\t// value is true if the element has children\n\t'1a45dfa3': true, // EBML\n\t'18538067': true, // Segment\n\t'1f43b675': true, // Cluster\n\t'1654ae6b': true, // Tracks\n\tae: true, // TrackEntry\n\td7: false, // TrackNumber\n\t'83': false, // TrackType\n\ta3: false, // SimpleBlock\n\t'63a2': false,\n};\n\nfunction vintLength(buffer: Buffer, index: number) {\n\tlet i = 0;\n\tfor (; i < 8; i++) if ((1 << (7 - i)) & buffer[index]) break;\n\ti++;\n\tif (index + i > buffer.length) {\n\t\treturn TOO_SHORT;\n\t}\n\treturn i;\n}\n\nfunction expandVint(buffer: Buffer, start: number, end: number) {\n\tconst length = vintLength(buffer, start);\n\tif (end > buffer.length || typeof length !== 'number') return TOO_SHORT;\n\tconst mask = (1 << (8 - length)) - 1;\n\tlet value = buffer[start] & mask;\n\tfor (let i = start + 1; i < end; i++) {\n\t\tvalue = (value << 8) + buffer[i];\n\t}\n\treturn value;\n}\n"]}